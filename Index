<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Deriv Digit Match Analyzer</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    table {
      border-collapse: collapse;
      margin-top: 20px;
    }
    th, td {
      padding: 10px;
      border: 1px solid #333;
      text-align: center;
    }
    .digit {
      font-weight: bold;
    }
    #status {
      margin-top: 10px;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h1>ðŸ“Š Deriv Digit Match Analyzer</h1>

  <label for="symbol">Select Symbol: </label>
  <select id="symbol">
    <option value="R_100">R_100</option>
    <option value="R_50">R_50</option>
    <option value="R_25">R_25</option>
    <option value="R_75">R_75</option>
    <option value="R_10">R_10</option>
  </select>
  <button onclick="startStream()">Start</button>
  <button onclick="stopStream()">Stop</button>

  <div id="status">Status: Disconnected</div>

  <table>
    <thead>
      <tr>
        <th>Digit</th>
        <th>Count</th>
      </tr>
    </thead>
    <tbody id="digitTable">
      <!-- Rows will be added by JavaScript -->
    </tbody>
  </table>

  <script>
    const digitCounts = Array(10).fill(0);
    const digitTable = document.getElementById("digitTable");
    const statusDiv = document.getElementById("status");
    let socket = null;

    function initTable() {
      digitTable.innerHTML = "";
      for (let i = 0; i <= 9; i++) {
        const row = document.createElement("tr");
        row.innerHTML = `<td class="digit">${i}</td><td id="count-${i}">0</td>`;
        digitTable.appendChild(row);
      }
    }

    initTable();

    function startStream() {
      const symbol = document.getElementById("symbol").value;
      const appId = 1089; // Replace with your Deriv App ID if you have one
      const wsUrl = `wss://ws.binaryws.com/websockets/v3?app_id=${appId}`;

      if (socket) {
        socket.close();
      }

      socket = new WebSocket(wsUrl);

      socket.onopen = () => {
        statusDiv.textContent = "Status: Connected to " + symbol;
        socket.send(JSON.stringify({
          ticks: symbol,
          subscribe: 1
        }));
      };

      socket.onmessage = (event) => {
        const data = JSON.parse(event.data);
        if (data.tick) {
          const price = data.tick.quote.toString();
          const lastDigit = parseInt(price[price.length - 1]);
          digitCounts[lastDigit]++;
          document.getElementById(`count-${lastDigit}`).textContent = digitCounts[lastDigit];
        }
      };

      socket.onerror = () => {
        statusDiv.textContent = "Status: Error!";
      };

      socket.onclose = () => {
        statusDiv.textContent = "Status: Disconnected";
      };
    }

    function stopStream() {
      if (socket) {
        socket.close();
        socket = null;
        statusDiv.textContent = "Status: Disconnected";
      }
    }
  </script>
</body>
</html>
